---
title: "Signal Detection Theory "
description: |
  Understanding signal detection theory with pseudoscience.
date: "2022-05-01"
author:
  - name: Andrew Ellis
    url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universit√§t Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0002-2788-936X
license: CC BY
citation: true
bibliography: ../../bibliography.bib
format:
    html:
        toc: true
        code-link: true
execute: 
  cache: false
code-annotations: select
---

```{r}
#| include: false
# Set working directory of R
knitr::opts_knit$set(root.dir = "../../data/session-10")
```
:::{.callout-tip collapse="false"}
## Lernziele

In der heutigen Sitzung lernen wir:

- üèó üöß Ô∏è
:::

:::{.callout-tip}
## Wichtig

üëâ [Daten f√ºr diese Sitzung herunterladen](../../downloadable_files/rdkdata.csv)
:::


# Pseudoscience

@andersonTeachingSignalDetection2015


# Datenanalyse

```{r}
library(tidyverse)
```

```{r}
df <- read_csv("data/rdkdata_clean.csv")
```

```{r}
df  <- df |>
  mutate(across(c(id, condition, cue, direction), as_factor))
```

```{r}
df <- df |>
    mutate(type = case_when(
        direction == "right" & choice == "right" ~ "Hit",
        direction == "right" & choice == "left" ~ "Miss",
        direction == "left" & choice == "left" ~ "CR",
        direction == "left" & choice == "right" ~ "FA"
    ))
```




```{r}
df_cue <- df |>
      group_by(id, cue) |>
      count(type) |> 
    pivot_wider(names_from = type, values_from = n) 
```


```{r}
replace_NA <- function(x) {
    x = ifelse(is.na(x), 0, x)
    x
} 
```

```{r}
df_cue <- df_cue |>
  mutate(across(c(Hit, Miss, FA, CR), replace_NA))
```

```{r}
correct_zero_one <- function(rate, e = 0.001) {
    if (identical(rate, 0)) {
        rate = rate + e
    } else if (identical(rate, 1)) {
        rate = rate - e
    }
    rate
}
```




```{r}
df_cue  <- df_cue |>
    mutate(hit_rate = Hit/(Hit + Miss),
           fa_rate = FA/(FA + CR))
```

```{r}
df_cue <- df_cue |>
    mutate(across(c(hit_rate, fa_rate), correct_zero_one))
```

```{r}
df_cue <- df_cue |>
  mutate(zhr = qnorm(hit_rate),
           zfa = qnorm(fa_rate))
```


```{r}
df_cue <- df_cue |>
  mutate(dprime = zhr - zfa,
         k = -zfa,
         c = -0.5 * (zhr + zfa)) |>
    mutate(across(c(dprime, k, c), \(x) round(x, 2)))
```


```{r}
df_cue |>
  ggplot(aes(x = c, y = dprime)) +
      geom_hline(yintercept = 0, color = "blue", linetype = 2) +
      geom_vline(xintercept = 0, color = "blue", linetype = 2) +
      geom_jitter(size = 1) +
      facet_wrap(~ cue) +
      labs(x = "c", y = "d'") +
      ggtitle("Bias vs. sensitivity") +
      theme_linedraw()
```


```{r}
sdt_final <- df_cue |>
    select(id, cue, dprime, k, c)
```

```{r}
cs <- sdt_final |>
    select(id, cue, c) |>
    Rmisc::summarySEwithin(measurevar = "c",
                           withinvars = "cue",
                           idvar = "id",
                           na.rm = FALSE,
                           conf.interval = 0.95)
```


```{r}
dprimes <- sdt_final |>
    select(id, cue, dprime) |>
    Rmisc::summarySEwithin(measurevar = "dprime",
                           withinvars = "cue",
                           idvar = "id",
                           na.rm = FALSE,
                           conf.interval = 0.95)
```

```{r}
cs |>
    ggplot(aes(x = cue, y = c, group = 1)) + 
    geom_hline(yintercept = 0, 
               linetype = "dashed",
               color = "grey60") +
    geom_line() +
    geom_errorbar(width = 0.1, aes(ymin = c - ci,
                                   ymax = c + ci)) +
    geom_point(shape = 21, size = 3, fill = "white") +
    ggtitle("c (bias)")
```

```{r}
cs |>
    ggplot(aes(x = cue, y = c, group = 1)) + 
    geom_hline(yintercept = 0, 
               linetype = "dashed",
               color = "grey60") +
    geom_jitter(aes(cue, c), alpha = 0.3, data = sdt_final, width = 0.05) +
    geom_line() +
    geom_errorbar(width = 0.1, aes(ymin = c - ci,
                                   ymax = c + ci)) +
    geom_point(shape = 21, size = 3, fill = "white") +
    ggtitle("c (bias)")
```


```{r}
library(patchwork)
    
p1 <- dprimes |>
      ggplot(aes(x = cue, y = dprime, group = 1)) +
      geom_line() +
      geom_errorbar(width = 0.1, aes(ymin = dprime - ci,
                                       ymax = dprime + ci)) +
        geom_point(shape = 21, size = 3, fill = "white") +
   ggtitle("D'")
      
p2 <- cs |>
        ggplot(aes(x = cue, y = c, group = 1)) + 
        geom_hline(yintercept = 0, 
                   linetype = "dashed",
                   color = "grey60") +
          geom_line() +
          geom_errorbar(width = 0.1, aes(ymin = c - ci,
                                       ymax = c + ci)) +
        geom_point(shape = 21, size = 3, fill = "white") +
        ggtitle("Bias")
  
  p1 / p2
```


```{r}
p1 + p2
```

