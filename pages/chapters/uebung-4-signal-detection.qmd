---
title: "Übung 4"
description: |
   Untersuchung eines prä-symptomatischen Indikators für die Alzheimer-Krankheit
date: "2022-05-01"
author:
  - name: Andrew Ellis
    url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0002-2788-936X
license: CC BY
citation: true
bibliography: ../../bibliography.bib
format:
    html:
        toc: true
        code-link: true
execute: 
  cache: false
code-annotations: select
---

```{r}
#| include: false
# Set working directory of R
knitr::opts_knit$set(root.dir = '../../data/uebung-4')
```



:::{.callout-tip collapse="false"}
## Aufgaben
Die Übung 4 besteht aus den zwei folgenden Aufgaben:

**1. RMarkdown-File erstellen und ausführen**: In diesem File werden die Daten eingelesen, SDT Kennzahlen und damit eine Grafik erstellt. Das RMarkdown-File muss von einer anderen Person ausgeführt werden können (Reproduzierbarkeit) und gut kommentiert sein. Zeit: 1 Woche.

**2. Peer Feedback**: Mittels Ilias wird Ihnen das RMarkdown-File und die Grafik einer anderen Person zugeordnet. Ihr Auftrag ist es, dieses RMarkdown-File auszuführen und Feedback zu geben. Zeit: 1 Woche.
:::


## Kommentare & Code

Achten Sie darauf, dass Sie den Code in den Codefeldern schreiben und den Text ausserhalb. Wählen Sie aus, welche die Codechunks ausgeführt / angezeigt werden sollen.

## Aufgaben
 
- Laden Sie nötige Packages.

- Laden Sie die Daten unseres Experiments. Sie finden den Datensatz `rdkdata_clean.csv` für diese Übung im Projektordner `dataviz` > `data_rdk`.

- Machen Sie Textvariablen und die Personen-Id-Variable zu Faktoren und schauen Sie den Datensatz kurz an (mit `slice_head()` oder `glimpse()`), um zu überprüfen, ob die Daten richtig eingelesen wurden.

- Ihre Aufgabe ist es eine Forschungsfrage zu dem vorhandenen Datensatz zu stellen, dazu eine Grafik zu plotten und die Antwort damit zu visualisieren, sowie in schriftlicher Form zu geben.

    - Beschreiben Sie in Textform, welche Frage Sie mit Ihrer Grafik beantworten möchten.

    - Falls nötig: Bearbeiten Sie den Datensatz / erstellen Sie einen neuen Datensatz für die Grafik.

    - Erstellen Sie die Grafik, und lassen Sie diese anzeigen.

    - Speichern Sie die Grafik zusätzlich als `.jpg` oder `.png` ab. So kann Ihr Peer Reviewer auch bei nicht funktionierendem Code Rückmeldung zur Grafik geben. 
    
    - Fügen Sie der Grafik passende Beschriftungen hinzu.
    
    - Beantworten Sie Ihre Forschungsfrage schriftlich.
    


## Rey auditory verbal learning test
In dieser Übung werden wir die Sensitivität und den Bias für zwei Gruppen von Patienten untersuchen, die sich in ihrem Risiko für Alzheimer-Krankheit unterscheiden. Bei 60 Patienten wurde die Anwesenheit von [Beta-Amyloid](https://de.wikipedia.org/wiki/Beta-Amyloid) durch einen [Bluttest](https://www.nia.nih.gov/news/blood-test-can-predict-presence-beta-amyloid-brain-new-study-finds) 


These data come from a clinical setting, and involve memory ability tests for 60 patients using the Rey auditory verbal learning test (RALVT: Bean, 2011)
- in the recognition task, the patients study a set of 15 words, and tested on 30 words, made up of 15 old and 15 new words
• Patients also had a cerebrospinal fluid measurement taken to classify their levels beta amyloid as “positive” or “negative”
- amyloid positivity is thought to be a pre-symptomatic indicator of Alzheimer’s disease


## Code

```{r}
library(tidyverse)
```

```{r}
df <- read_csv("data/amyloidSDT.csv")
```



```{r}
add_half_count <- function(count) {
  count + 0.5
}
```


```{r}
df <- df |> 
  mutate(across(c(hit, miss, fa, cr), add_half_count))
```


```{r}
df <- df |>
    mutate(
        hit_rate = hit / (hit + miss),
        fa_rate = fa / (fa + cr)
    )
```


```{r}
df |> 
  ggplot(aes(fa_rate, hit_rate, color = group)) +
  geom_abline(intercept = 0, slope = 1, linetype = 2) +
  geom_jitter() +
  scale_color_viridis_d(direction = -1, begin = 0.1, end = 0.8) +
      facet_wrap(~ group) +
      xlim(c(0, 1)) +
      theme_linedraw())
```


```{r}
df <- df |>
    mutate(
        zhr = qnorm(hit_rate),
        zfa = qnorm(fa_rate)
    )
```

```{r}
df <- df |>
    mutate(
        dprime = zhr - zfa,
        k = -zfa,
        c = -0.5 * (zhr + zfa)
    )
```

```{r}
df <- df |>
    mutate(across(c(dprime, k, c), \(x) round(x, 2)))
```


```{r}
df
```


```{r}
se <- function(x) {
  sd(x) / sqrt(length(x))
}
```


```{r}
dprimes <- df |>
  select(group, dprime) |> 
  group_by(group) |> 
  summarize(mean = mean(dprime),
            se = se(dprime))
```

```{r}
cs <- df |> 
  select(group, c) |> 
  group_by(group) |> 
  summarize(mean = mean(c),
            se = se(c))
```




```{r}
p_dprimes <- dprimes |>
  ggplot(aes(x=group, y=mean, group=1)) +
    geom_line() +
    geom_errorbar(width=.1, aes(ymin=mean-se, ymax=mean+se), colour="black") +
    geom_point(shape=21, size=3, fill="white") +
    ylab("Sensitivity")
```

```{r}
p_cs <- cs |>
    ggplot(aes(x=group, y=mean, group=1)) +
    geom_line() +
    geom_errorbar(width=.1, aes(ymin=mean-se, ymax=mean+se), colour="black") +
    geom_point(shape=21, size=3, fill="white") +
    ylab("Bias")
```


```{r}
library(patchwork)
```

```{r}
p_dprimes + p_cs
```


- for healthy amyloid negative patients on the left, and potentially impaired amyloid positive patients on the right
- the basic data change of more misses, but not many more false alarms, is captured by the model
