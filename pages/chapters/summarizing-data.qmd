---
title: "Deskriptive Statistik"
description: |
  Daten aus Verhaltensexperiments bearbeiten und zusammenfassen.
date: "2022-03-20"
author:
  - name: Andrew Ellis
    url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universit√§t Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0002-2788-936X
license: CC BY
citation: true
bibliography: ../../bibliography.bib
format:
    html:
        toc: true
        code-link: true
execute: 
  cache: false
---

```{r}
#| include: false
# Set working directory of R
knitr::opts_knit$set(root.dir = '../../data/rdk_decision_experiment')
```

<!-- :::{.callout-note}
üëâ [R Code f√ºr dieses Kapitel downloaden](../../downloadable_files/summarizing-data.R)
::: -->

Wir haben in den vorherigen Kapiteln gesehen, wie wir Daten aus Verhaltensexperimenten in R einlesen und bearbeiten k√∂nnen. In diesem Kapitel werden wir uns mit der Frage besch√§ftigen, wie wir die Daten zusammenfassen k√∂nnen, um sie besser zu verstehen.

Zuerst laden wir das `tidyverse` Package und lesen das gespeicherte `csv` File ein.
```{r}
#| message: false
#| warning: false
library(tidyverse)
data <- read_csv("data_clean/rdkdata.csv")
```

Im ersten Schritt konvertieren wir wieder alle Gruppierungsvariablen zu Faktoren. Ob eine Variable als `factor` definiert ist, wird als Attribut gespeichert. Attribute werden aber in einem `.csv.` File nicht mitgespeichert; deshalb m√ºssen wir diesen Schritt nach dem Einlesen jedesmal neu ausf√ºhren. 

```{r}
data <- data |>
    mutate(across(where(is.character), as_factor))
```

```{r}
glimpse(data)
```

```{r}
data |>
  slice_head(n = 10)
```


# Individuelle und Aggregierte Kennzahlen

In neurowissenschaftlichen Fragestellungen interessieren wir uns sowohl f√ºr durchschnittliche Kennzahlen, d.h. f√ºr die Kennzahlen, die wir erhalten, wenn wir √ºber Personen aggregieren, als auch f√ºr individuelle Kennzahlen, d.h. f√ºr die Kennzahlen, die wir erhalten, wenn wir die Daten f√ºr jede Versuchsperson einzeln betrachten. Wir schauen uns dies am Beispiel der korrekten Antworten in der RDK Entscheidungsaufgabe an.


# Binary Choices

Wir schauen uns zuerst (wie im letzten Kapitel) die Anzahl korrekter Entscheidungen an. Nun betrachten wir nicht mehr nur den Mittelwert, sondern auch die Standardabweichung und den Standardfehler. Letzteres ist eine Mss f√ºr die Unsicherheit, die wir in der Sch√§tzung des Mittelwerts haben. Leider gibt es keine Funktion in R, die uns den Standardfehler berechnet. Wir definieren eine solche Funktion einfach selber. Der Standardfehler ist definiert als die Stichprobenstandardabweichung geteilt durch die Wurzel aus der Anzahl der Datenpunkte:  $$SE = sd/ \sqrt{n}$$.



```{r}
se <- function(x) {
  sd(x) / sqrt(length(x))
}
```


## Pro Bedingung, √ºber alle Personen aggregiert

Eine M√∂glichkeit w√§re, die Anzahl korrekter Entscheidungen in jeder Bedingung insgesamt, d.h. √ºber alle Personen aggregiert, zu berechnen. 

```{r}
data |>
    group_by(condition) |>
            summarise(
                  n = n(),
                  ncorrect = sum(correct),
                  accuracy = mean(correct),
                  se = se(correct)
            )
```


:::{.callout-caution}
Was sagen uns diese Kennzahlen? Welche Informationen gehen dabei verloren?
:::




## Pro Versuchsperson


```{r}
#| message: false
accuracy <- data |>
    group_by(ID, condition) |>
    summarise(N = n(),
              ncorrect = sum(correct),
              accuracy = mean(correct),
              se = se(correct))
```

```{r}
accuracy
```

Wir k√∂nnen diese Tabelle grafisch darstellen; Grafiken sind oft einfacher zu interpretieren als Tabellen. 



```{r fig.height=12, fig.width=15}
accuracy |> 
  ggplot(aes(x = condition, y = accuracy, fill = condition)) +
  geom_col() +
  geom_line(aes(group = ID), linewidth = 2) +
  geom_point(size = 4) +
  scale_fill_manual(values = c(invalid = "#9E0142",
                    neutral = "#C4C4B7",
                    valid = "#2EC762")) +
  labs(x = "Cue",
      y = "Proportion correct",
      title = "Accuracy per person/condition") +
  facet_wrap(~ID) +
  theme_linedraw(base_size = 28) +
  theme(legend.position = "none")
```




## Ein Exkurs √ºber Within-person Standardfehler 

```{r}
library(tidyverse)

dfw <- tribble(
 ~subject, ~pretest, ~posttest,
       1,   59.4,     64.5,
       2,   46.4,     52.4,
       3,   46.0,     49.7,
       4,   49.0,     48.7,
       5,   32.5,     37.4,
       6,   45.2,     49.5,
       7,   60.3,     59.9,
       8,   54.3,     54.1,
       9,   45.4,     49.6,
      10,   38.9,     48.5) |>
    mutate(subject = as.factor(subject))
```

```{r}
dfw
```

```{r}
dfl <- dfw |>
    pivot_longer(contains("test"),
                 names_to = "condition",
                 values_to = "value") |>
    mutate(condition = as_factor(condition))
```

```{r}
dfl
```

```{r}
dflsum <- dfl |>
    Rmisc::summarySEwithin(measurevar = "value",
                               withinvars = "condition",
                               idvar = "subject",
                               na.rm = FALSE,
                               conf.interval = 0.95)
```

```{r}
dflsum |>
    ggplot(aes(x = condition, y = value, group = 1)) +
    geom_line() +
    geom_errorbar(width = 0.1, aes(ymin = value-ci, ymax = value+ci)) +
    geom_point(shape = 21, size = 3, fill = "white") +
    ylim(40,60)
```


```{r}
# Use a consistent y range
ymax <- max(dfl$value)
ymin <- min(dfl$value)
```

```{r}
# Plot the individuals
dfl |>
    ggplot(aes(x=condition, y=value, colour=subject, group=subject)) +
    geom_line() + geom_point(shape=21, fill="white") +
    ylim(ymin,ymax)
```

```{r}
dfNorm_long <- Rmisc::normDataWithin(data=dfl, idvar="subject", measurevar="value")
?Rmisc::normDataWithin

dfNorm_long |>
    ggplot(aes(x=condition, y=valueNormed, colour=subject, group=subject)) +
    geom_line() + geom_point(shape=21, fill="white") +
    ylim(ymin,ymax)
```

```{r}
# Instead of summarySEwithin, use summarySE, which treats condition as though it were a between-subjects variable
dflsum_between <- Rmisc::summarySE(data = dfl, 
                                   measurevar = "value", 
                                   groupvars = "condition", 
                                   na.rm = FALSE, 
                                   conf.interval = .95)
dflsum_between
```

```{r}
# Show the between-S CI's in red, and the within-S CI's in black
dflsum_between |>
    ggplot(aes(x=condition, y=value, group=1)) +
    geom_line() +
    geom_errorbar(width=.1, aes(ymin=value-ci, ymax=value+ci), colour="red") +
    geom_errorbar(width=.1, aes(ymin=value-ci, ymax=value+ci), data=dflsum) +
    geom_point(shape=21, size=3, fill="white") +
    ylim(ymin,ymax)
```

## Within-person Standardfehler

```{r}
accuracy |> 
  ggplot(aes(x = condition, y = accuracy, colour = ID, group = ID)) +
    geom_line() + 
  geom_point(shape=21, fill="white")

```




```{r}
datasum <- data |>
   group_by(condition) |> 
   summarise(N = n(),
             accuracy = mean(correct),
             sd = sd(correct),
             se = se(correct))
datasum
```

```{r}
datasum_2 <- data |>
    Rmisc::summarySE(measurevar = "correct",
                              groupvars = "condition",
                               na.rm = FALSE,
                               conf.interval = 0.95)
datasum_2
```

```{r}
datasum_3 <- data |>
    Rmisc::summarySEwithin(measurevar = "correct",
                               withinvars = "condition",
                               idvar = "ID",
                               na.rm = FALSE,
                               conf.interval = 0.95)
datasum_3
```

```{r}
p_accuracy <- datasum_3 |>
    ggplot(aes(x = condition, y = correct, group = 1)) +
    geom_line() +
    geom_errorbar(width = .1, aes(ymin = correct-se, ymax = correct+se), colour="red") +
    geom_point(shape=21, size=3, fill="white")
p_accuracy
```

# Reaktionszeiten

## Pro Versuchsperson

Wir fassen die Daten pro Person pro Block mit Mittelwert, Median und Standarabweichung zusammen.

```{r}
#| message: false

funs <- list(mean = mean, median = median, sd = sd)

by_subj <- data %>%
  drop_na(rt) |> 
  group_by(ID, condition) %>% 
  dplyr::summarise(across(rt, funs, .names = "{.fn}"))
```

```{r}
by_subj 
```

Einfachere Version:

```{r}
#| message: false

by_subj <- data |> 
  drop_na(rt) |> 
  group_by(ID, condition) |>  
  dplyr::summarise(mean = mean(rt),
                   median = median(rt),
                   sd = sd(rt))
```

```{r}
#| fig.height: 12
#| fig.width: 15

by_subj |> 
  ggplot(aes(x = condition, y = mean, fill = condition)) +
  geom_col() +
  geom_line(aes(group = ID), size = 2) +
  geom_point(size = 8) +
  scale_fill_manual(
    values = c(invalid = "#9E0142",
    neutral = "#C4C4B7",
    valid = "#2EC762")
  ) +
  labs(
    x = "Cue",
    y = "Response time") +
  theme_linedraw(base_size = 28) +
  facet_wrap(~ID)
```

```{r}
#| message: false

se <- function(x, ...) sd(x, ...)/sqrt(length(x))

by_subj <- data %>% 
  group_by(ID, condition) %>% 
  summarise(mean = mean(rt, na.rm = TRUE), 
            median = median(rt, na.rm = TRUE), 
            sd = sd(rt, na.rm = TRUE), 
            se = se(rt, na.rm = TRUE))
```

```{r}
#| fig.height: 6
#| fig.width: 8

by_subj |> 
  ggplot(aes(condition, mean)) +
  geom_line(aes(group = 1), linetype = 3) +    
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se),
                width = 0.2, size=1, color="blue") +
  geom_point(size = 2) +
  facet_wrap(~ID, scales = "free_y")
```

## √úber Versuchsperson aggregieren
```{r}
rtsum <- data |>
  drop_na(rt) |> 
    Rmisc::summarySEwithin(measurevar = "rt",
                               withinvars = "condition",
                               idvar = "ID",
                               na.rm = FALSE,
                               conf.interval = 0.95)
rtsum
```

```{r}
p_rt <- rtsum |>
    ggplot(aes(x = condition, y = rt, group = 1)) +
    geom_line() +
    geom_errorbar(width = .1, aes(ymin = rt-se, ymax = rt+se), colour="red") +
    geom_point(shape=21, size=3, fill="white")
```

```{r}
#| fig.height: 6
#| fig.width: 8

p_rt
```

```{r}
library(patchwork)
```

```{r}
#| fig.height: 6
#| fig.width: 8

p_accuracy / p_rt
```