{
  "hash": "03e036ce296366c3bc27084a77e91eec",
  "result": {
    "markdown": "---\ntitle: \"Data cleaning\"\ndescription: |\n    Daten aus Verhaltensexperiments bearbeiten und Datenpunkte identifizieren.\ndate: \"2022-03-15\"\nauthor:\n  - name: Andrew Ellis\n    url: https://github.com/awellis\n    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern \n    affiliation-url: https://www.kog.psy.unibe.ch\n    orcid: 0000-0002-2788-936X\nlicense: CC BY\ncitation: true\nbibliography: ../../bibliography.bib\nformat:\n    html:\n        toc: true\n        code-link: true\n---\n\n\n:::{.callout-note}\n👉 [R Code für dieses Kapitel downloaden](../../downloadable_files/data-cleaning.R)\n:::\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-1_5b891be6a18977324a6cd9023a4f8e63'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(viridis)\n\ntheme_set(theme_grey(base_size = 14) +\n            theme(panel.grid = element_blank()))\n```\n:::\n\n\nNun wollen wir versuchen, einzelne Trials, zu identifizieren, in denen Versuchpersonen nicht aufgepasst haben, oder einfach geraten wurde.  \n\nAm häufigsten werden die folgenden beiden Kriterien verwendet, um entweder einzelne Datenpunkte, oder Versuchspersonen, auszuschliessen:\n\n1) Versuchspersonen, deren Accuracy < 50% ist.\n\n2) Trials, in denen die Antwort zu schnell oder zu langsam war.\n\nNun ist in Experimenten, in denen ein Bias erzeugt wird, etwas heikel, Trials oder Versuchspersonen aufgrund der Anzahl korrekter Antworten auszuschliessen - wir haben ja die Korrektheit der Antworten experimentell manipuliert. \n\nDeswegen richten wir hier unseren Fokus auf die Reaktionszeiten. Wir gehen davon aus, dass Reaktionszeiten, die zu schnell oder yu langsam waren, aufgrund von Rateprozessen zustande kamen. Was genau __zu schnell__ oder __zu langsam__ heisst, ist schwierig zu beantworten, und hängt stark vom jeweiligen Task ab.\nDeshalb ist es wichtig, sich _a priori_ Gedanken darüber zu machen, welche Kriterien angewandt werden sollen.\n\n# Reaktionszeiten\n\nDrei häufig verwendete Tasks, um Reaktionszeiten zu messen sind \n\n- Reaction tasks\n- Go/No Go tasks\n- Discrimination tasks\n\nBei *Reaction tasks* muss auf einen Reiz reagiert werden, bei Go/No Go tasks muss zwischen zwei Reizen unterschieden, und nur auf einen reagiert werden. Discrimination tasks erfordern komplexere kognitive Leistungen, da eine von zwei Antworten gegeben werden muss, in Abhängigkeit des Reizes. \n\nWenn wir Reaktionszeiten messen, gehen wir gehen davon aus, dass die Zeit, die benötigt wird, um einen Task auszuführen, uns über den kognitiven Prozess Auskunft gibt. Dabei ist es aber wichtig, dass die Versuchsperson in dieser Zeit wirklich genau den Task ausführt, und nicht nebenher noch andere Prozesse die Reaktionszeit beeinflussen, da diese sonst bedeutungslos wäre. Leider ist dies nicht immer der Fall. Bei vielen repetitiven Tasks sind *attentional lapses* nicht zu vermeiden, und nur bei den einfachsten Tasks ist es möglich, sicherzustellen, dass die VP auch wirklich den intendierten Task ausführt.\n\n## Eigenschaften von Reaktionszeiten \n\nDie wichtigsten Merkmale von Reaktionszeiten sind \n\n1) Sie sind rechtsschief\n2) Sie sind nicht normalverteilt\n3) Streuung (Standardabweichung) steigt ungefähr linear mit wachsendem Mittelwert [@wagenmakersLinearRelationMean2007]\n\nDie Rechtschiefe ist eine natürliche Konsequenz der Tatsache, dass es viele Möglichkeiten gibt, langsamer zu werden, aber nur wenige Möglichkeiten, schneller zu werden. Reaktionszeiten können nicht negativ sein Ausserdem gibt es eine Untergrenze, welche durch unsere Physiologie bestimmt ist. Schellere Reaktionszeiten als 200 Millisekunden sind kaum möglich. \n\nDie Konsequenz daraus ist, dass Reaktionszeiten nicht normalverteilt sind. In folgender Grafik sind zwei Verteilungen dargestellt. Die gelbe Verteilung ist eine Normalverteilung mit $\\mu = 1$ und $\\sigma = 0.4$, während die graue Verteilung eine LogNormal Verteilung darstellt.\n\n<aside>\nEine LogNormal-Verteilung bedeutet, dass der Logarithmus einer Zufallsvariablen normalverteilt ist.\n</aside>\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-2_2b3b5ea90c8ed6bb4814e636e0be3709'}\n::: {.cell-output-display}\n![](data-cleaning_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nObwohl die Normalverteilung so aussieht, als könne sie Reaktionszeiten repräsentieren, ist der Wertebereich von $[-\\infty, \\infty]$ nicht dafür geeignet. Ausserdem erlaubt die Normalverteilung keine extremen Werte, und ist nicht asymmetrisch.\n\n# Daten aus einem Reaktionszeitexperiment\n  \nWir untersuchen nun Daten aus einem Online-Experiement mit 3 Blöcken. In jedem Block mussten Versuchspersonen einen anderen Task ausführen. Unser Ziel ist es, Datenpunkte zu identfizieren, welche wir eventuell ausschliessen müssen.\n\nDie drei Tasks sind: \n\n1) Reaction task\n\nVersuchspersonen drücken SPACE-Taste wenn ein Stimulus erscheint (Quadrat oder Kreis). Abhängige Variable ist die Reaktionszeit.\n\n2) Go/No-Go task\n\nVersuchspersonen drücken SPACE-Taste wenn Target erscheint (entweder Quadrat oder Kreis). Abhängige Variablen sind Reaktionszeit und Antwort.\n\n3) Discrimination task\n\nVersuchspersonen drücken F-Taste wenn ein Quadrat erscheint, J-Taste wenn ein Kreis erscheint. Abhängige Variablen sind Reaktionszeit und Antwort.\n\n**Annahme**: Versuchspersonen brauchen im Reaction Task am wenigsten Zeit, um eine korrekte Antwort zu geben, gefolgt vom Go/No-Go Task. Im Discrimination Task brauchen Versuchspersonen länger, um korrekte Antworten zu geben.\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-3_e076b9be3022cc6fdada33d9b8c2a0d7'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nURL <- \"https://raw.githubusercontent.com/kogpsy/neuroscicomplab/main/data/mental-chronometry.csv\"\n\nmentalchronometry <- read_csv(URL) |> \n  mutate(across(c(subj, block, stimulus, handedness, gender), ~as_factor(.)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 2519 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): block, stimulus, handedness, gender\ndbl (3): subj, trial_number, RT\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-4_fd966f9d714d2bcd3fc742e4e7c1a24e'}\n\n```{.r .cell-code}\nglimpse(mentalchronometry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,519\nColumns: 7\n$ subj         <fct> 8554, 8554, 8554, 8554, 8554, 8554, 8554, 8554, 8554, 855…\n$ trial_number <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17…\n$ block        <fct> reaction, reaction, reaction, reaction, reaction, reactio…\n$ stimulus     <fct> circle, square, square, square, circle, square, square, c…\n$ RT           <dbl> 311, 269, 317, 325, 240, 262, 295, 277, 288, 309, 319, 29…\n$ handedness   <fct> Right, Right, Right, Right, Right, Right, Right, Right, R…\n$ gender       <fct> female, female, female, female, female, female, female, f…\n```\n:::\n:::\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-5_d56b38342a37243e8746e2464d3a1000'}\n\n```{.r .cell-code}\nmentalchronometry\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,519 × 7\n   subj  trial_number block    stimulus    RT handedness gender\n   <fct>        <dbl> <fct>    <fct>    <dbl> <fct>      <fct> \n 1 8554             1 reaction circle     311 Right      female\n 2 8554             2 reaction square     269 Right      female\n 3 8554             3 reaction square     317 Right      female\n 4 8554             4 reaction square     325 Right      female\n 5 8554             5 reaction circle     240 Right      female\n 6 8554             6 reaction square     262 Right      female\n 7 8554             7 reaction square     295 Right      female\n 8 8554             8 reaction circle     277 Right      female\n 9 8554             9 reaction square     288 Right      female\n10 8554            10 reaction circle     309 Right      female\n# … with 2,509 more rows\n```\n:::\n:::\n\n\nHier sind die Daten von 5 zufällig ausgewählten Personen:\n\n\n::: {.cell .column-page hash='data-cleaning_cache/html/unnamed-chunk-6_d628d96b73d19a3abf52aadf6801d940'}\n\n```{.r .cell-code}\nset.seed(98)\nsubjects <- sample(levels(mentalchronometry$subj), 6)\ndf <- mentalchronometry |>\n  filter(subj %in% subjects)\n\ndf |> \n  ggplot(aes(RT, fill = block)) +\n  geom_histogram(alpha = 0.8, position = \"identity\", color = \"black\") +\n  scale_fill_viridis(discrete=TRUE, option=\"cividis\") +\n  facet_grid(block ~ subj, scales = \"free_x\") +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](data-cleaning_files/figure-html/unnamed-chunk-6-1.png){width=1152}\n:::\n:::\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-7_ee19a3e6c2d7567d78c7011a6dfccecf'}\n\n```{.r .cell-code}\ndf |> \n  filter(subj %in% subjects) |> \n  ggplot(aes(y = RT, x = block, fill = block)) +\n  geom_violin(alpha = 0.6) +\n  geom_jitter(width = 0.1) +\n  scale_fill_viridis(discrete=TRUE, option=\"cividis\") +\n  facet_wrap(~ subj, scales = \"free_x\") +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](data-cleaning_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\nWir können versuchen Ausreisser zu identifizieren.\n\n# Cleaning by subject\n\nUnser Ziel ist es, die Daten einer Versuchsperson zu entfernen, falls diese Person in einer experimentellen Bedingung eine mittlere RT hat, welche mehr als 2 Standardabweichungen vom Gesamtmittelwert liegt.\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-8_946e702a82c40cdccffe39c70af42e47'}\n\n```{.r .cell-code}\n# summary stats (means) for participants\nsum_stats_participants <- mentalchronometry |> \n  group_by(subj, block) |> \n  dplyr::summarise(\n    mean_P = mean(RT))\n\n# summary stats (means and SDs) for conditions\nsum_stats_conditions <- mentalchronometry |> \n  group_by(block) |> \n  dplyr::summarise(\n    mean_C = mean(RT),\n    sd_C = sd(RT))\n  \nsum_stats_participants <- \n  full_join(\n    sum_stats_participants,\n    sum_stats_conditions,\n    by = \"block\") |> \n  mutate(\n    outlier_P = abs(mean_P - mean_C) > 2 * sd_C)\n\n# show outlier participants\nsum_stats_participants |> \n  filter(outlier_P == 1) |> \n  show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n# Groups:   subj [1]\n  subj  block          mean_P mean_C  sd_C outlier_P\n  <fct> <fct>           <dbl>  <dbl> <dbl> <lgl>    \n1 8505  discrimination  1078.   518.  185. TRUE     \n```\n:::\n:::\n\n\nWir haben also eine Person, welche in einer Bedingung (`discrimination`) eine mittlere RT hat, welche mehr als 2 Standardabweichungen vom Gesamtmittelwert dieser Bedingung liegt. \n\nWeiter können wir die RT für jeden Trial in jeder Bedingung plotten. Es ist klar, dass die mittlere RT im `discrimination` aufgrund mehrerer Ausreisser zustande kommt.\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-9_2c06bd17e892a3884da473e9a56abdf9'}\n\n```{.r .cell-code}\nmentalchronometry |> \n  semi_join(sum_stats_participants |> filter(outlier_P == 1), \n    by = c(\"subj\")) |> \n  ggplot(aes(x = trial_number, y = RT)) +\n  geom_point() +\n  facet_wrap(~block)\n```\n\n::: {.cell-output-display}\n![](data-cleaning_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nWir könnten diese Person ganz ausschliessen.\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-10_ea1222f8b2d4a293d1fc005f18df5efa'}\n\n```{.r .cell-code}\nexcluded <- sum_stats_participants |> \n  filter(outlier_P == 1)\n\nexcluded\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n# Groups:   subj [1]\n  subj  block          mean_P mean_C  sd_C outlier_P\n  <fct> <fct>           <dbl>  <dbl> <dbl> <lgl>    \n1 8505  discrimination  1078.   518.  185. TRUE     \n```\n:::\n:::\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-11_4339a6cc00427d92d28eb107563eaa5b'}\n\n```{.r .cell-code}\nmentalchronometry_cleaned <- mentalchronometry |> \n  filter(!(subj %in% excluded$subj)) |> \n  mutate(subj = fct_drop(subj))\n```\n:::\n\n\n# Cleaning by trial\n\nNun wollen alle Trials identifizieren, welche mehr als 2 Standardabweichungen vom Bedingungs-Gesamtmittelwert liegen. Ausserdem entfernen wir alle RTs, welche unter 100 Millisekunden liegen.\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-12_020758979a5e9c527c26263496cdabfe'}\n\n```{.r .cell-code}\n# mark individual trials as outliers\nmentalchronometry_cleaned <- mentalchronometry_cleaned |> \n  full_join(\n    sum_stats_conditions,\n    by = \"block\") |> \n  mutate(\n    trial_type = case_when(\n      abs(RT - mean_C) > 2 * sd_C ~ \"zu weit vom Mittelwert\",\n      RT < 100 ~ \"< 100ms\",\n      TRUE ~ \"OK\") |> \n      factor(levels = c(\"OK\", \"< 100ms\", \"zu weit vom Mittelwert\")),\n    trial = row_number())\n```\n:::\n\n::: {.cell .column-page hash='data-cleaning_cache/html/unnamed-chunk-13_3ef3fd75204bd9a38f66c102f6dc5ae3'}\n\n```{.r .cell-code}\n# visualize outlier trials\nmentalchronometry_cleaned |> \n  ggplot(aes(x = trial, y = RT, color = trial_type, shape = trial_type)) +\n  geom_point(alpha = 0.6) + \n  geom_point(data = filter(mentalchronometry_cleaned, trial_type != \"OK\"), \n             alpha = 0.9) + \n  facet_grid(~block) +\n  scale_color_manual(values = c(\"gray70\", \"red\", \"steelblue\"))\n```\n\n::: {.cell-output-display}\n![](data-cleaning_files/figure-html/unnamed-chunk-13-1.png){width=1152}\n:::\n:::\n\n\nWir haben insgesamt 63 Trials, welche nach unseren Kriterien Ausreisser sein könnten.\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-14_250711fb62cdb9630c71a6d323c9bc70'}\n\n```{.r .cell-code}\nmentalchronometry_cleaned |> \n  filter(trial_type != \"OK\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 63 × 11\n   subj  trial_n…¹ block stimu…²    RT hande…³ gender mean_C  sd_C trial…⁴ trial\n   <fct>     <dbl> <fct> <fct>   <dbl> <fct>   <fct>   <dbl> <dbl> <fct>   <int>\n 1 8552         11 goNo… square    690 Right   male     442.  104. zu wei…   126\n 2 8552         14 goNo… square    727 Right   male     442.  104. zu wei…   128\n 3 8552         17 goNo… square    697 Right   male     442.  104. zu wei…   129\n 4 8552         18 goNo… square    720 Right   male     442.  104. zu wei…   130\n 5 8551          3 reac… square    712 right   male     311.  157. zu wei…   153\n 6 8550         16 reac… square     54 right   male     311.  157. < 100ms   216\n 7 8550          4 goNo… circle   1010 right   male     442.  104. zu wei…   223\n 8 8549         11 reac… square   2244 Righth… male     311.  157. zu wei…   262\n 9 8549         20 reac… square   1087 Righth… male     311.  157. zu wei…   271\n10 8549         12 goNo… square    778 Righth… male     442.  104. zu wei…   277\n# … with 53 more rows, and abbreviated variable names ¹​trial_number, ²​stimulus,\n#   ³​handedness, ⁴​trial_type\n```\n:::\n:::\n\nDiese 63 Trials entfernen wir nun.\n\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-15_546fd577427efb699dd7ef8a9f0f0464'}\n\n```{.r .cell-code}\nmentalchronometry_cleaned <- mentalchronometry_cleaned |> \n  filter(trial_type == \"OK\")\n```\n:::\n\n::: {.cell hash='data-cleaning_cache/html/unnamed-chunk-16_b0945eabb6d67492b9e2f2468001d27a'}\n\n```{.r .cell-code}\nmentalchronometry_cleaned |> \n  ggplot(aes(x = RT, color = block, fill = block)) +\n  geom_density(alpha = 0.3) +\n  scale_fill_viridis(discrete=TRUE, option=\"cividis\") +\n  scale_color_viridis(discrete=TRUE, option=\"cividis\")\n```\n\n::: {.cell-output-display}\n![](data-cleaning_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nData Cleaning ist zwar in den meisten Fällen notwendig,  aber leider etwas willkürlich, und gibt dem Forscher/der Forscherin sehr viele Freiheiten (researcher degrees of freedom). Es ist deshlab wichtig, Ausschlusskriterien für Personen und einzelne Trials vor der Analyse festzulegen, und offen zu berichten.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}